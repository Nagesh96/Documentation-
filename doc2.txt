Design Documentation: Jira to Cherwell Integration

1. Introduction
-----------------
1.1 Purpose
  - The purpose of this document is to provide a comprehensive overview of the design and implementation details for the       integration between Jira and Cherwell using a Python script.
  1.2 Scope
  This integration aims to synchronize specific fields (e.g., description, environment, priority, custom fields) from a Jira issue to a corresponding Cherwell business object of a defined type (e.g., "New Release").

2. Prerequisites
----------------
2.1 Jira Setup
  - Functional Jira instance.
  - Jira server URL, username, and password.
  - Identification of the target Jira issue key.
2.2 Cherwell Setup
  - Access to a Cherwell instance.
  - Cherwell base URL, API key, username, and password.
  - Determination of the Cherwell object type for synchronization (e.g., "New Release")

3. Workflow Overview
------------------------
The integration follows a three-step workflow:
1. Jira Field Fetching:
  - Connect to Jira using provided credentials.
  - Fetch desired fields from a specified Jira issue.
2. Cherwell Integration:
  - Utilize CherwellAPI library to connect to Cherwell.
  - Create a new Cherwell business object instance based on the identified object type.
  - Update Cherwell object fields with values fetched from Jira.
3. Business Object ID Printing:
  - After Cherwell update, print the business object record ID to confirm success.

4. Implementation Details
-----------------------------
4.1 Jira Field Fetching
  - Utilize the jira library to establish a connection to Jira.
  - Use Jira REST API to fetch fields from a specified issue.
4.2 Cherwell Integration
  - Use the CherwellAPI library to establish a connection to Cherwell.
  - Create a new Cherwell business object instance based on the identified object type.
  - Update Cherwell object fields with values fetched from Jira.
4.3 Business Object ID Printing
  - Print the business object record ID after Cherwell update to confirm successful integration.
